{"ast":null,"code":"export default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'FETCH_ALL':\n      return action.payload;\n    case 'CREATE':\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    // case DELETE:\n    //     return posts.filter((post) => post._id !== action.payload);\n    // case LIKE:\n    //     return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    default:\n      return posts;\n  }\n});","map":{"version":3,"names":["posts","action","type","payload","UPDATE","map","post","_id"],"sources":["/Users/shulun_lyu/Desktop/Project/MERN/memories_project/client/src/reducers/posts.js"],"sourcesContent":["export default ( posts = [], action ) => {\n    switch(action.type){\n        case 'FETCH_ALL':\n            return action.payload;\n        case 'CREATE':\n            return [...posts, action.payload];\n        case UPDATE:\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n        // case DELETE:\n        //     return posts.filter((post) => post._id !== action.payload);\n        // case LIKE:\n        //     return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n        default:\n            return posts;\n    }\n}\n"],"mappings":"AAAA,gBAAe,YAA0B;EAAA,IAAxBA,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EAC/B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,WAAW;MACZ,OAAOD,MAAM,CAACE,OAAO;IACzB,KAAK,QAAQ;MACT,OAAO,CAAC,GAAGH,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IACrC,KAAKC,MAAM;MACP,OAAOJ,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACC,GAAG,KAAKN,MAAM,CAACE,OAAO,CAACI,GAAG,GAAGN,MAAM,CAACE,OAAO,GAAGG,IAAK,CAAC;IACzF;IACA;IACA;IACA;IACA;MACI,OAAON,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}