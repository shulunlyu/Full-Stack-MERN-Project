{"ast":null,"code":"var _jsxFileName = \"/Users/shulun_lyu/Desktop/Project/MERN/test/client/src/GlobalNav.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MenuHeader from \"./MenuHeader\";\nimport { useState } from \"react\";\nimport './GlobalNav.css';\nimport './css-gg.css';\nfunction GlobalNav(_ref) {\n  _s();\n  let {\n    className,\n    onNav\n  } = _ref;\n  const [showMenu, setShowMenu] = useState(false);\n  const list = MenuHeader.map(item => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"global-nav__item\",\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"global-nav__link\",\n      href: item.path,\n      onClick: onNav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, item.name));\n  });\n\n  // const menuHtml = (        \n  // );\n\n  const showClass = showMenu ? 'global-nav__list--open' : \"\";\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: `global-nav ${className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"global-nav__button\",\n    \"aria-label\": showMenu ? \"Close Menu\" : \"Open Menu\",\n    onClick: () => {\n      setShowMenu(!showMenu);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"gg-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: `global-nav__list ${showClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, list));\n}\n_s(GlobalNav, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c = GlobalNav;\nexport default GlobalNav;\nvar _c;\n$RefreshReg$(_c, \"GlobalNav\");","map":{"version":3,"names":["React","MenuHeader","useState","GlobalNav","className","onNav","showMenu","setShowMenu","list","map","item","name","path","showClass"],"sources":["/Users/shulun_lyu/Desktop/Project/MERN/test/client/src/GlobalNav.jsx"],"sourcesContent":["import React from 'react';\n\nimport MenuHeader from \"./MenuHeader\";\n\nimport { useState } from \"react\";\n\nimport './GlobalNav.css';\nimport './css-gg.css';\n\nfunction GlobalNav({ className, onNav }){\n    const [showMenu, setShowMenu] = useState(false);\n\n    const list = MenuHeader.map( item => {\n        return (\n          <li className=\"global-nav__item\" key={item.name}>\n            <a \n            className=\"global-nav__link\" \n            href={item.path}\n            onClick= { onNav }\n            >\n              {item.name}\n            </a> \n          </li>\n        ); \n    });\n\n    // const menuHtml = (        \n    // );\n\n    const showClass = showMenu ? 'global-nav__list--open' : \"\";\n\n    return (\n        <nav className={`global-nav ${className}`}>\n            {/* Click the Menu button to show menu or not */}\n            <button className=\"global-nav__button\"\n            aria-label={showMenu ? \"Close Menu\" : \"Open Menu\"}\n            onClick={ ()=> {\n                setShowMenu(!showMenu);\n            }}><i className=\"gg-menu\"/></button>\n            <ul className={`global-nav__list ${showClass}`}>\n                { list }\n            </ul>\n            {/* if showMenu is true there will show menuHtml */}\n            {/* {showMenu && menuHtml} */}\n        </nav>\n    );\n}\n\nexport default GlobalNav;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,iBAAiB;AACxB,OAAO,cAAc;AAErB,SAASC,SAAS,OAAsB;EAAA;EAAA,IAArB;IAAEC,SAAS;IAAEC;EAAM,CAAC;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMM,IAAI,GAAGP,UAAU,CAACQ,GAAG,CAAEC,IAAI,IAAI;IACjC,oBACE;MAAI,SAAS,EAAC,kBAAkB;MAAC,GAAG,EAAEA,IAAI,CAACC,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC9C;MACA,SAAS,EAAC,kBAAkB;MAC5B,IAAI,EAAED,IAAI,CAACE,IAAK;MAChB,OAAO,EAAIP,KAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEfK,IAAI,CAACC,IAAI,CACR,CACD;EAEX,CAAC,CAAC;;EAEF;EACA;;EAEA,MAAME,SAAS,GAAGP,QAAQ,GAAG,wBAAwB,GAAG,EAAE;EAE1D,oBACI;IAAK,SAAS,EAAG,cAAaF,SAAU,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEtC;IAAQ,SAAS,EAAC,oBAAoB;IACtC,cAAYE,QAAQ,GAAG,YAAY,GAAG,WAAY;IAClD,OAAO,EAAG,MAAK;MACXC,WAAW,CAAC,CAACD,QAAQ,CAAC;IAC1B,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAC;IAAG,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CAAS,eACpC;IAAI,SAAS,EAAG,oBAAmBO,SAAU,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzCL,IAAI,CACL,CAGH;AAEd;AAAC,GArCQL,SAAS;AAAA,KAATA,SAAS;AAuClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}