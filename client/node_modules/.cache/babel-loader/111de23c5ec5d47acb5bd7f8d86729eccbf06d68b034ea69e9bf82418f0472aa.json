{"ast":null,"code":"var _jsxFileName = \"/Users/shulun_lyu/Desktop/Project/MERN/test/client/src/components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const handleSubmit = e => {\n    // send over all the posts data\n    e.preventDefault();\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n    clear();\n  };\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? `Editing` : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true\n        // useState\n        ,\n        value: postData.creator\n        // ...postData means in every textfield if do the same thing, only change the last property\n        ,\n        onChange: e => setPostData({\n          ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        minRows: 4,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"3OQt5XuxxtiD14h8RaTWc1CZraA=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["/Users/shulun_lyu/Desktop/Project/MERN/test/client/src/components/Form/Form.js"],"sourcesContent":["import React , { useState, useEffect } from \"react\";\n\nimport useStyles from './styles';\n\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\n\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from \"react-redux\";\n\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nconst Form = ( {currentId, setCurrentId} ) =>{\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (post) setPostData(post);\n      }, [post]);\n\n    const handleSubmit = (e) =>{\n        // send over all the posts data\n        e.preventDefault();\n\n        if(currentId){\n            dispatch(updatePost(currentId , postData));\n        }else{\n            dispatch(createPost(postData));\n        }\n\n        clear();\n    }\n\n    const clear = () =>{\n        setCurrentId(null);\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n            <Typography variant=\"h6\">{currentId ? `Editing` : 'Creating'} a Memory</Typography>\n            <TextField \n                name=\"creator\" \n                variant=\"outlined\" \n                label=\"Creator\" \n                fullWidth \n                // useState\n                value={postData.creator} \n                // ...postData means in every textfield if do the same thing, only change the last property\n                onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n            <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline minRows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n            <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n            {/* choose file from local */}\n            <div className={classes.fileInput}>\n                <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n            </div>\n            <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}