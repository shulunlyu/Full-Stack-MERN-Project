{"ast":null,"code":"var _jsxFileName = \"/Users/shulun_lyu/Desktop/Project/MERN/test/client/src/GlobalNav.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MenuHeader from \"./MenuHeader\";\nimport { useState } from \"react\";\nimport './GlobalNav.css';\nimport './css-gg.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GlobalNav(_ref) {\n  _s();\n  let {\n    className,\n    onNav\n  } = _ref;\n  const [showMenu, setShowMenu] = useState(false);\n  const list = MenuHeader.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"global-nav__item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"global-nav__link\",\n        href: item.path,\n        onClick: onNav,\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, item.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  });\n\n  // const menuHtml = (        \n  // );\n\n  const showClass = showMenu ? 'global-nav__list--open' : \"\";\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `global-nav ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"global-nav__button\",\n      \"aria-label\": showMenu ? \"Close Menu\" : \"Open Menu\",\n      onClick: () => {\n        setShowMenu(!showMenu);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"gg-menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `global-nav__list ${showClass}`,\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(GlobalNav, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c = GlobalNav;\nexport default GlobalNav;\nvar _c;\n$RefreshReg$(_c, \"GlobalNav\");","map":{"version":3,"names":["React","MenuHeader","useState","GlobalNav","className","onNav","showMenu","setShowMenu","list","map","item","path","name","showClass"],"sources":["/Users/shulun_lyu/Desktop/Project/MERN/test/client/src/GlobalNav.jsx"],"sourcesContent":["import React from 'react';\n\nimport MenuHeader from \"./MenuHeader\";\n\nimport { useState } from \"react\";\n\nimport './GlobalNav.css';\nimport './css-gg.css';\n\nfunction GlobalNav({ className, onNav }){\n    const [showMenu, setShowMenu] = useState(false);\n\n    const list = MenuHeader.map( item => {\n        return (\n          <li className=\"global-nav__item\" key={item.name}>\n            <a \n            className=\"global-nav__link\" \n            href={item.path}\n            onClick= { onNav }\n            >\n              {item.name}\n            </a> \n          </li>\n        ); \n    });\n\n    // const menuHtml = (        \n    // );\n\n    const showClass = showMenu ? 'global-nav__list--open' : \"\";\n\n    return (\n        <nav className={`global-nav ${className}`}>\n            {/* Click the Menu button to show menu or not */}\n            <button className=\"global-nav__button\"\n            aria-label={showMenu ? \"Close Menu\" : \"Open Menu\"}\n            onClick={ ()=> {\n                setShowMenu(!showMenu);\n            }}><i className=\"gg-menu\"/></button>\n            <ul className={`global-nav__list ${showClass}`}>\n                { list }\n            </ul>\n            {/* if showMenu is true there will show menuHtml */}\n            {/* {showMenu && menuHtml} */}\n        </nav>\n    );\n}\n\nexport default GlobalNav;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,iBAAiB;AACxB,OAAO,cAAc;AAAC;AAEtB,SAASC,SAAS,OAAsB;EAAA;EAAA,IAArB;IAAEC,SAAS;IAAEC;EAAM,CAAC;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMM,IAAI,GAAGP,UAAU,CAACQ,GAAG,CAAEC,IAAI,IAAI;IACjC,oBACE;MAAI,SAAS,EAAC,kBAAkB;MAAA,uBAC9B;QACA,SAAS,EAAC,kBAAkB;QAC5B,IAAI,EAAEA,IAAI,CAACC,IAAK;QAChB,OAAO,EAAIN,KAAO;QAAA,UAEfK,IAAI,CAACE;MAAI;QAAA;QAAA;QAAA;MAAA;IACR,GAPgCF,IAAI,CAACE,IAAI;MAAA;MAAA;MAAA;IAAA,QAQ1C;EAEX,CAAC,CAAC;;EAEF;EACA;;EAEA,MAAMC,SAAS,GAAGP,QAAQ,GAAG,wBAAwB,GAAG,EAAE;EAE1D,oBACI;IAAK,SAAS,EAAG,cAAaF,SAAU,EAAE;IAAA,wBAEtC;MAAQ,SAAS,EAAC,oBAAoB;MACtC,cAAYE,QAAQ,GAAG,YAAY,GAAG,WAAY;MAClD,OAAO,EAAG,MAAK;QACXC,WAAW,CAAC,CAACD,QAAQ,CAAC;MAC1B,CAAE;MAAA,uBAAC;QAAG,SAAS,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS,eACpC;MAAI,SAAS,EAAG,oBAAmBO,SAAU,EAAE;MAAA,UACzCL;IAAI;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QAGH;AAEd;AAAC,GArCQL,SAAS;AAAA,KAATA,SAAS;AAuClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}